map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

map $http_x_forwarded_proto $real_scheme {
    '' $scheme;
    default $http_x_forwarded_proto;
}

server {
    ########################################
    ############ START IP CONFIG ###########
    ########################################
    # Define trusted IP ranges and configure real client IP extraction
    # Useful when NGINX is behind a proxy or load balancer

    set_real_ip_from 10.0.0.0/8;        # Trust Docker internal networks using the 10.x.x.x range
    set_real_ip_from 172.16.0.0/12;     # Trust Docker bridge networks (default 172.16.x.x to 172.31.x.x range)
    set_real_ip_from 192.168.0.0/16;    # Trust custom Docker networks using 192.168.x.x range
    set_real_ip_from 127.0.0.1;         # Trust localhost, useful for forwarded requests from the same container or host

    real_ip_header X-Forwarded-For; # Use X-Forwarded-For header to get the real client IP
    real_ip_recursive on; # Enable recursive search for real IP through proxies

    ########################################
    ############ END IP CONFIG #############
    ########################################

    ######### Nginx configuration #########
    listen 8000;
    listen [::]:8000;
    server_name localhost;
    server_tokens off;

    charset utf-8;
    client_max_body_size 2G;
    root /app/public;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";

    index index.php;

    location /basic_status {
        stub_status;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }

    location /index.php {
        try_files /not_exists @octane;
    }

    location / {
        try_files $uri $uri/ @octane;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt { access_log off; log_not_found off; }

    access_log off;
    error_log /var/log/nginx/laravel-error.log error;

    error_page 404 /index.php;

    location @octane {
        set $suffix "";

        if ($uri = /index.php) {
            set $suffix ?$query_string;
        }

        proxy_set_header SERVER_PORT $server_port;
        proxy_set_header REMOTE_ADDR $remote_addr;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header X-Forwarded-Proto $real_scheme;

        proxy_pass http://127.0.0.1:8080$suffix;

        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
    }
}
